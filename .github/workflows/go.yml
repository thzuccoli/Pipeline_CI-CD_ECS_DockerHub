name: Go

on:
  push:
    branches: [ '*' ]           # inserir * para realizar a rotina caso haja push em qualquer branch
  pull_request:
    branches: [ '*' ]           # inserir * para realizar a rotina caso haja pull request em qualquer branch

jobs:

  test:
    runs-on: ${{ matrix.os }}
    env:
      HOST: localhost
      DBPORT: 5432
      USER: root
      PASSWORD: root
      DBNAME: root
    strategy:
      matrix:
        go_version: ['1.18', '1.17']
        os: ['ubuntu-latest', 'ubuntu-22.04']     # definindo os SO a ser executado o job test
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go_version }}
      
    - name: Build-DB
      run: docker compose build
      
    - name: Create-DB
      run: docker compose up -d

    - name: Test
      run: go test -v main_test.go 
      
  
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: go build -v main.go

    - name: Upload a Build Artifact         # ação de salvar o arquivo compilado como artefato para passar pro job docker
      uses: actions/upload-artifact@v4.4.3
      with:
        name: programago       # informar qualquer nome relacionado a descrição da aplicação
        path: main              # iremos salvar o arquivo main
        
  docker:                         # inserir a tarefa para criação do docker image
    needs: build                  # execução do job docker somente após o build
    uses: ./.github/workflows/Docker.yml              # acionamento da rotina do arquivo docker.yml
    secrets: inherit	                    # defini a utilização de secrets no arquivo Docker.yml

  #Deploy_ec2:                         # inserir a tarefa para chamada da ação de deploy no EC2
    #needs: build                  # execução do job docker somente após o build
    #uses: ./.github/workflows/cd_ec2.yml              # acionamento da rotina do arquivo cd_ec2.yml
    #secrets: inherit

  Deploy_ECS:                         # inserir a tarefa para chamada da ação de deploy no ECS
    needs: docker                  # execução do job deploy ECS somente após a criação do docker images
    uses: ./.github/workflows/ECS.yml              # acionamento da rotina do arquivo ECS.yml
    secrets: inherit
